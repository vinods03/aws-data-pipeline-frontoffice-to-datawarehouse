-- Here we are assuming that only the customer or seller address can change for each order

-- below approach uses the upsert methodology. There will be only one record for onee order_id / product_code combination.
-- If aany attribute changes, the record will be updated and a new record will nott be inserted.

CREATE OR REPLACE PROCEDURE enriched_orders_sp ()
AS $$
BEGIN

 RAISE INFO 'STARTING THE LOAD INTO ecommerce.orders';
 
 INSERT INTO ecommerce.temp_orders
 select order_id, customer_name, customer_address, seller_name, seller_address, product_code, product_name, product_price, product_qty, order_value, order_purchase_timestamp
 from ecommerce_staging.orders a left outer join ecommerce.customers b
 on a.customer_id = b.customer_id
 left outer join ecommerce.sellers c
 on a.seller_id = c.seller_id;

 INSERT INTO ecommerce.orders
 select order_id, customer_name, customer_address, seller_name, seller_address, product_code, product_name, product_price, product_qty, order_value, order_purchase_timestamp,
 getdate() as dwh_create_timestamp, NULL as dwh_update_timestamp
 from ecommerce.temp_orders temp
 where temp.order_id || temp.product_code not in (select distinct order_id || product_code from ecommerce.orders);

 update ecommerce.orders target
 set customer_address = temp.customer_address, 
 seller_address = temp.seller_address,
 dwh_update_timestamp = getdate()
 from ecommerce.temp_orders temp
 where target.order_id = temp.order_id 
 and target.product_code = temp.product_code
 and (target.customer_address != temp.customer_address
 or target.seller_address != temp.seller_address);

 TRUNCATE TABLE ecommerce_staging.orders;

 TRUNCATE TABLE ecommerce.temp_orders;

 RAISE INFO 'COMPLETED THE LOAD INTO ecommerce.orders';

EXCEPTION 
 
 WHEN OTHERS THEN
 RAISE EXCEPTION 'LOAD INTO ecommerce.orders failed';
 
END;
$$ LANGUAGE plpgsql;

------------------------------------ How to invoke / test the above stored proc: -------------------------------------------

call enriched_orders_sp();


